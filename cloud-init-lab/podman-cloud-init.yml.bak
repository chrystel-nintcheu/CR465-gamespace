#cloud-config
package_update: true
package_upgrade: true

packages:
  - podman
  - uidmap
  - slirp4netns
  - fuse-overlayfs
  - python3-pip
  - git
  - git-lfs

users:
  - name: azureuser
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDt6GCHfvG/... vscode@host

write_files:
  - path: /home/azureuser/podman-compose.yml
    permissions: '0644'
    owner: root:root
    content: |
      version: '3'
      services:
        web:
          image: docker.io/library/nginx:stable
          ports:
            - "80:80"
            - "443:443"
          restart: always

  - path: /usr/local/bin/setup-podman.sh
    permissions: '0755'
    owner: root:root
    content: |
      #!/bin/bash
      set -euo pipefail
      export DEBIAN_FRONTEND=noninteractive

      # Re-exec with sudo if not root
      if [ "$(id -u)" -ne 0 ]; then
        if command -v sudo >/dev/null 2>&1; then
          exec sudo bash "$0" "$@"
        else
          echo "Ce script nécessite les privilèges root." >&2
          exit 1
        fi
      fi

      apt-get update --fix-missing || true

      # Installer Podman et dépendances
      apt-get install -y podman python3-pip git git-lfs uidmap slirp4netns fuse-overlayfs || true

      # Installer podman-compose via pip (portable)
      pip3 install --no-cache-dir podman-compose || true

      # Configurer subuid/subgid pour l'utilisateur rootless
      grep -q '^azureuser:' /etc/subuid 2>/dev/null || echo 'azureuser:100000:65536' >> /etc/subuid
      grep -q '^azureuser:' /etc/subgid 2>/dev/null || echo 'azureuser:100000:65536' >> /etc/subgid

      # Activer le socket podman si disponible
      systemctl enable --now podman.socket || true

      # Attendre la création de l'utilisateur cloud-init
      for i in $(seq 1 30); do
        if id -u azureuser >/dev/null 2>&1; then
          break
        fi
        sleep 1
      done

      # Préparer /home/azureuser et droits corrects
      mkdir -p /home/azureuser
      chown root:root /home/azureuser || true
      chown -R azureuser:azureuser /home/azureuser || true
      chmod 0755 /home/azureuser || true
      if [ -f /home/azureuser/podman-compose.yml ]; then
        chown azureuser:azureuser /home/azureuser/podman-compose.yml || true
        chmod 0644 /home/azureuser/podman-compose.yml || true
      fi

      # Attendre l'apparition de la commande podman
      for i in $(seq 1 20); do
        if command -v podman >/dev/null 2>&1; then
          podman --version >/dev/null 2>&1 && break
        fi
        sleep 1
      done

      # Lancer podman-compose en rootless avec runuser
      runuser -l azureuser -c 'cd /home/azureuser && podman-compose -f podman-compose.yml up -d' || true

runcmd:
  - /usr/local/bin/setup-podman.sh >> /var/log/setup-podman.log 2>&1 || true

final_message: "Podman installé. Voir /var/log/setup-podman.log et 'sudo -u azureuser podman ps -a'."